name: PullStravaData
on:
  # Nightly cron job
  schedule:
    - cron: 42 19 * * *
  # Allows to be run manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#permissions:
#  contents: write
#  id-token: write

# Uses Personal Access Token (instead of GITHUB_TOKEN) to enable chaining workflows
#env:
#  ACCESS_TOKEN: ${{ secrets.ACTION_TOKEN }}

jobs:
  refresh-feed:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          repository: your-private/repo_name
          token: ${{ secrets.GH_ACTION_PERSONAL_ACCESS_TOKEN }}
        #--- Next Step
      - name: Install GPX manipulation commands
        run: sudo apt-get install -y python3-gpxpy
        #--- Next Step
      - name: Fetch Data through Strava API
        run: ./scripts/pull_strava_data.py
        env:
          CONF_CLIENT_ID: ${{ secrets.STRAVA_client_id }}
          CONF_CLIENT_SECRET: ${{ secrets.STRAVA_client_secret }}
          CONF_REFRESH_TOKEN: ${{ secrets.STRAVA_REFRESH_TOKEN }}
        #--- Next Step
      - name: Commit freshly created files
        run: |
          git config --global user.email "tim.smith@cern.ch"
          git config --global user.name "Tim Smith"
          git status -s 1>&2
          # Push any modified GPX files
          git add tracks/3_gpx 1>&2
          git add features 1>&2
          if ! git diff --staged --quiet --exit-code tracks/3_gpx; then
            echo ">>> New GPX files to commit"
            # Commit any modified GPX files
            git status -s 1>&2
            #git commit -m "${{ github.event.head_commit.message }}" 1>&2
            git commit -m "Download BOT: adding latest tracks" 1>&2
            git push 1>&2
          else
            echo ">>> No new GPX files to commit"
          fi
          exit 0

