name: MapTracksDeploy
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
    paths:
      - 'scripts/**'
      - 'tracks/tim/3_gpx/**'
      - 'tracks/alison/3_gpx/**'

  # Allows to be run manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

run-name: Generate GeoJSONs for ${{ github.event.head_commit.message }}

jobs:
  # Build GeoJSON files from any newly committed GPX files
  GeoJsonBuild:
    name: Generate_Aggregate
    runs-on: macos-latest
    steps:
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      #--- Next Step
      - name: Install GPXpy and GeoJSON for gpx transformations
        run: pip install gpxpy geojson
      #--- Checkout using PAT rather than default token, so PagesDeploy/push workflow gets triggered
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_ACTION_PERSONAL_ACCESS_TOKEN }}
      #--- First Step
      - name: Generate GeoJson files from any new GPX files
        run: |
          # If the last commit contained any track files
          if ! git diff --quiet --exit-code "HEAD~1" "HEAD" tracks/tim/2_geojson tracks/tim/3_gpx tracks/alison/2_geojson tracks/alison/3_gpx; then
            git config --global core.quotePath false 
            git diff --name-status "HEAD~1" "HEAD" tracks/tim/2_geojson tracks/tim/3_gpx tracks/alison/2_geojson tracks/alison/3_gpx | awk -F " " '{print $2}' >Modified_Files
            echo ">>> Generate GeoJSON files for new/modified GPX files"
            grep -e '3_gpx' Modified_Files | xargs -r -I {} python scripts/gpx_to_geojson.py -s -u {}
            echo ">>> Generate new GeoJSON files for deleted/modified GeoJSON files"
            grep -e '2_geojson' Modified_Files | awk '{sub(/2_geojson/,"3_gpx")sub(/.geojson/,".gpx")}1' | xargs -r -I {} python scripts/gpx_to_geojson.py -s -u {}
            git config --global --unset core.quotePath
          else
            echo ">>> No GeoJSON files need generating"
          fi
      #--- Next Step
      - name: Aggregate new GeoJson files
        run: |
          # If any geojson files were generated
          echo ">>> Aggregate new GeoJSON files"
          grep -e '/tim/' Modified_Files | awk -F "/" '{print $4}' | sort | uniq | xargs -r -I {} python scripts/geojsons_merge.py -d tracks/tim/2_geojson/{} -o tracks/tim/1_display/{}_tracks.geojson
          grep -e '/alison/' Modified_Files | awk -F "/" '{print $4}' | sort | uniq | xargs -r -I {} python scripts/geojsons_merge.py -d tracks/alison/2_geojson/{} -o tracks/alison/1_display/{}_tracks.geojson
          echo ">>> Ensure aggregate GeoJSON files have properties:date on each feature"
          python scripts/geojson_validate.py -f tracks/tim/1_display/
          python scripts/geojson_validate.py -f tracks/alison/1_display/
          rsync -avu "tracks/tim/1_display/" "www/tracks/tim/1_display/" 
          rsync -avu "tracks/alison/1_display/" "www/tracks/alison/1_display/" 
        #--- Next Step
      - name: Commit new GeoJson files
        id: committed
        run: |
          if ! git diff --quiet --exit-code tracks/tim/1_display tracks/alison/1_display; then
            echo ">>> New GeoJSON files to commit"
            # Push the modified GeoJSON files
            git add tracks/tim/1_display 1>&2
            git add tracks/tim/2_geojson 1>&2
            git add tracks/tim/LastStravaIDRead.json 1>&2
            git add tracks/alison/1_display 1>&2
            git add tracks/alison/2_geojson 1>&2
            git add tracks/alison/LastStravaIDRead.json 1>&2
            git add www/tracks 1>&2
            git status -s 1>&2
            git commit -m "GeoJSONs for øø ${{ github.event.head_commit.message }}" 1>&2
            git push 1>&2
          else
            echo ">>> No new GeoJSON files to commit"
          fi

